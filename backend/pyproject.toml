[project]
name = "backend"
version = "0.1.0"
description = "abc"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.14",
    "ultralytics>=8.0.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "mlflow>=3.0.0",
    "roboflow>=1.1.0",
    "python-dotenv>=1.0.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0",
    "pydantic-settings>=2.10.1",
    "authlib>=1.3.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",
    "httpx>=0.25.0",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipykernel>=6.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "ruff>=0.11.8",
    "pyrefly>=0.21.0",
]

[tool.pyrefly]
project-includes = ["**/*"]
project-excludes = ["**/*venv/**/*"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "PT",   # flake8-pytest-style
    "RUF",  # Ruff-specific rules 
    "S",    # flake8-bandit
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
    "C90",  # mccabe
    "DTZ",  # flake8-datetimez
    "EM",   # flake8-errmsg
    "FBT",  # flake8-boolean-trap
    "G",    # flake8-logging-format
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "ISC",  # flake8-implicit-str-concat
    "LOG",  # flake8-logging
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",   # pylint
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
]
ignore = [
    "E501",   # Line too long
    "B008",   # Do not perform function calls in argument defaults
    "S105",   # Possible hardcoded password
    "S106",   # Possible hardcoded password
    "N805",   # First argument should be named 'self'
    "N999",   # Invalid module name
    "A003",   # Class attribute shadows builtin
    "RUF012", # Mutable class attributes should be annotated
    "PT009",  # Use regular assert instead of unittest-style
    "PLR0913", # Too many arguments - Comum em m√©todos complexos
    "PLR0915", # Too many statements - Comum em routes Flask grandes
    "PLR2004", # Magic value used in comparison
    "TRY003", # Avoid specifying long messages outside the exception class
    "EM101",  # Exception must not use a string literal
    "EM102",  # Exception must not use an f-string literal
    "G004",   # Logging statement uses f-string
]

[tool.ruff.lint.flake8-import-conventions.aliases]
"datetime" = "dt"
"matplotlib.pyplot" = "plt"
"numpy" = "np"
"pandas" = "pd"
"seaborn" = "sns"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.per-file-ignores]
"**/test_*.py" = [
    "S101",    # Allow assert statements in tests
    "PLR2004", # Allow magic values in tests
    "S105",    # Allow hardcoded passwords in tests
    "S106",    # Allow hardcoded passwords in tests
]
"**/tests/*.py" = [
    "S101",    # Allow assert statements in tests
    "PLR2004", # Allow magic values in tests
]
