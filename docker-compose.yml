services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:                 
      - ./frontend:/app 
      - /app/node_modules
    network_mode: host
 
  postgres:
    image: postgres:15-alpine
    container_name: acousticai_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: acousticai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d acousticai"]
      interval: 10s
      timeout: 5s
      retries: 5
    network_mode: host

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: acousticai_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src:cached
      - ./backend/alembic:/app/alembic:cached
      - ./backend/alembic.ini:/app/alembic.ini:ro
      - backend_logs:/app/src/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  backend_logs:
    driver: local
  postgres_data:
    driver: local
